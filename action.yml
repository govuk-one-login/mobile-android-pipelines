name: 'Android pipelines'
description: 'Run pipelines to validate code before merge and deploy afterwards'
icon: 'check-circle'
color: 'blue'
inputs:
  GITHUB_TOKEN:
    description: 'A GitHub API token that is automatically created by the workflow. This is required for release workflows to upload new release artefacts.'
    required: false
  SONAR_TOKEN:
    description: 'A token for SonarCloud to enable the workflow to read and upload new quality reports.'
    required: true
  action_ref:
    description: 'The gitref of this action that should be used when running the pipeline'
    required: false
    default: 'main'

runs:
  using: "composite"
  steps:
    - name: 'Checkout codebase'
      uses: ./mobile-android-pipelines/actions/checkout-codebase

    - name: Clean workspace
      uses: ./mobile-android-pipelines/actions/clean-workspace

    - name: Setup GitHub Runner workflow
      uses: ./mobile-android-pipelines/actions/setup-runner
      
    - name: Verify Conventional commit standards against latest git tag
      uses: ./mobile-android-pipelines/actions/verify-conventional-commit
      
    - name: Lint script files
      uses: ./mobile-android-pipelines/actions/lint-scripting-files
    
    - name: Run gradle testing suite
      uses: ./mobile-android-pipelines/actions/run-testing-suite
      
    - name: Upload results to sonarcloud (merge)
      if: ${{ github.event_name != 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/upload-results-to-sonarcloud
      with:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        ANALYSIS_TYPE: 'BRANCH'
    
    - name: Upload results to sonarcloud (pull request)
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/upload-results-to-sonarcloud
      with:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        ANALYSIS_TYPE: 'PR'


    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/sonar-quality-gate
      with:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
        
    - name: Bundle reports folder
      uses: ./mobile-android-pipelines/actions/bundle-reports
      
    - name: Increment the release version using Conventional Commits
      id: versioning
      if: ${{ github.event_name != 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/increment-cog-semantic-version
      
    - name: Publish release tags
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      uses: ./mobile-android-pipelines/actions/publish-release-tags

    - name: Publish package
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      uses: ./mobile-android-pipelines/actions/maven-publish
      with:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}

    - name: Test local publish
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/maven-publish-local

#      TODO DCMAW-10665: add values to `CURRENT_VERSION` and `NEW_VERSION`
    - name: Generate Changelog
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      uses: ./mobile-android-pipelines/actions/generate-and-upload-changelog
      with:
        CURRENT_VERSION: ${{ steps.versioning.outputs.current-version }}
        NEW_VERSION: ${{ steps.versioning.outputs.new-version }}

    - name: Clean workspace
      uses: ./mobile-android-pipelines/actions/clean-workspace
