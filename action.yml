name: 'Android pipelines'
description: 'Run pipelines to validate code before merge and deploy afterwards'
icon: 'check-circle'
color: 'blue'
inputs:
  GITHUB_TOKEN:
    description: 'A GitHub API token that is automatically created by the workflow. This is required for release workflows to upload new release artefacts.'
    required: false
  SONAR_TOKEN:
    description: 'A token for SonarCloud to enable the workflow to read and upload new quality reports.'
    required: true
  action_ref:
    description: 'The gitref of this action that should be used when running the pipeline'
    required: false
    default: 'main'

runs:
  using: "composite"
  steps:
    - name: 'Checkout codebase'
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: 'true'
        submodules: 'true'
        fetch-depth: 0
        fetch-tags: true

    - name: Clean workspace
      uses: ./mobile-android-pipelines/actions/clean-workspace

    - name: 'Detect architecture'
      id: detect-arch
      uses: ./mobile-android-pipelines/actions/detect-arch

    - name: Setup GitHub Runner workflow
      uses: ./mobile-android-pipelines/actions/setup-runner
      
    - name: Verify Conventional commit standards against latest git tag
      run: cog check -l
      shell: bash
      
    - name: Lint script files
      run: ./mobile-android-pipelines/scripts/lintProject.sh "" ""
      shell: bash
    
    - name: Run gradle testing suite
      run: ./mobile-android-pipelines/scripts/runTestingSuite.sh
      shell: bash
      
    - name: Upload results to sonarcloud (merge)
      if: ${{ github.event_name != 'pull_request' }}
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      run: |
        ./mobile-android-pipelines/scripts/sonar/scan "BRANCH" ${{ github.ref_name }}
      shell: bash
    
    - name: Upload results to sonarcloud (pull request)
      if: ${{ github.event_name == 'pull_request' }}
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      run: |
        ./mobile-android-pipelines/scripts/sonar/scan "PR" ${{ github.head_ref }} ${{ github.event.number }}
      shell: bash

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      if: ${{ github.event_name == 'pull_request' }}
      uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496 # pin@v1.1.0
      env:
        SONAR_TOKEN: ${{ inputs.SONAR_TOKEN }}
      with:
        scanMetadataReportFile: ${{ github.workspace }}/build/sonar/report-task.txt
        
    - name: Bundle reports folder
      uses: ./mobile-android-pipelines/actions/bundle-reports
        
    - name: Build artefact for release
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        ./gradlew assemble
      shell: bash
      
    - name: Increment the release version using Conventional Commits
      id: versioning
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
          
        current_version=$(cog -v get-version)
        echo "current_version=$current_version" >> $GITHUB_OUTPUT
          
        cog bump --auto
          
        new_version=$(cog -v get-version)
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
      shell: bash
      
    - name: Publish the release
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      run: |
        git push --follow-tags && git push --tags
      shell: bash

    - name: Publish package
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      uses: ./mobile-android-pipelines/actions/maven-publish
      with:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        GITHUB_ACTOR: ${{ github.actor }}

    - name: Publish local package
      if: ${{ github.event_name == 'pull_request' }}
      uses: ./mobile-android-pipelines/actions/maven-publish-local

    - name: Generate Changelog
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      run: |
        cog changelog --at v$(cog -v get-version) > CHANGELOG.md
      shell: bash

    - name: Upload Changelog
      if: ${{ github.event_name != 'pull_request'
        && steps.versioning.outputs.current_version != steps.versioning.outputs.new_version }}
      id: uploadBuildReports
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: CHANGELOG.md
        retention-days: 1
        if-no-files-found: error
        path: |
          CHANGELOG.md

    - name: Clean workspace
      uses: ./mobile-android-pipelines/actions/clean-workspace
