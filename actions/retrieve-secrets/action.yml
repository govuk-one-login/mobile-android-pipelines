name: 'Decode and export secrets'
description: 'Decodes the keystore and Google service account secret values and stores them in files in the config directory'

inputs:
  keystore-base64:
    description: 'Base64 encoded keystore (for signing apps)'
    required: true
  google-service-account-json-base64:
    description: 'Base64 encoded Google service acccount JSON credentials (for uploading apps to Google Play)'
    required: true
  working-directory:
    description: 'The working directory for steps in this action'
    required: false
    default: '.'

outputs:
  keystore-file-path:
    description: 'Path to the keystore file (relative to the working directory)'
    value: ${{ steps.decode-keystore.outputs.keystore-file-path }}
  google-service-account-json-file-path:
    description: 'Path to the Google service account JSON file (relative to the working directory)'
    value: ${{ steps.decode-google-service-account-json.outputs.credentials-file-path }}

runs:
  using: "composite"
  steps:
    - name: Create config folder if required
      run: |
        mkdir -p config
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      
    - name: Decode Keystore
      id: decode-keystore
      env:
        KEYSTORE_BASE64: ${{ inputs.keystore-base64 }}
        KEYSTORE_FILE_PATH: config/keystore.jks
      run: |
        echo "${KEYSTORE_BASE64}" | base64 --decode > ${KEYSTORE_FILE_PATH}
        echo "keystore-file-path=${KEYSTORE_FILE_PATH}" >> "$GITHUB_OUTPUT"
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Decode Google service account JSON credentials
      id: decode-google-service-account-json
      env:
        CREDENTIALS_BASE64: ${{ inputs.google-service-account-json-base64 }}
        CREDENTIALS_FILE_PATH: config/service-account-credentials.json
      run: |
        echo "${CREDENTIALS_BASE64}" | base64 --decode > ${CREDENTIALS_FILE_PATH}
        echo "credentials-file-path=${CREDENTIALS_FILE_PATH}" >> "$GITHUB_OUTPUT"
      shell: bash
      working-directory: ${{ inputs.working-directory }}
